{"version":3,"sources":["components/LineGraph.jsx","components/Temperature.jsx","components/Altitude.jsx","components/CO2.jsx","components/Humidity.jsx","components/Pressure.jsx","components/TVOC.jsx","components/Beacon.jsx","App.jsx","serviceWorker.js","index.js"],"names":["makeStyles","theme","graphContainer","display","flexDirection","margin","graphTitle","marginLeft","marginRight","useStyles","tableContainer","maxHeight","overflowY","tableStyle","flex","Temperature","props","data","classes","Fragment","Container","Grid","container","spacing","item","md","className","width","height","dot","type","dataKey","stroke","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","time","Altitude","CO2","Humidity","Pressure","TVOC","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","top","left","root","flexGrow","TabPanel","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","Beacon","prediction","useState","open","setOpen","setValue","altData","setAltData","CO2Data","setCO2Data","humData","setHumData","presData","setPresData","TVOCData","setTVOCData","tempData","setTempData","useEffect","timeOffset","Time","newAltData","e","newAltPred","newCO2Data","newHumData","newHumPred","newPresData","newPresPred","newTVOCData","newTempData","newTempPred","style","fontSize","color","onClick","Modal","aria-describedby","onClose","AppBar","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","scrollButtons","Tab","label","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","heatMapData0","positions","lat","lng","weight","options","radius","opacity","heatMapData1","heatMapData2","heatMapData3","heatMapData4","heatMapData5","Boolean","window","location","hostname","match","ReactDOM","render","setPrediction","setData","fakeData","setFakeData","heatMapData","setHeatMapData","ref","on","snapshot","val","bootstrapURLKeys","key","defaultCenter","scrollwheel","heatmapLibrary","heatmap","zoom","Object","values","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.567fc9b3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip } from 'recharts';\nimport { Paper, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n}));\n\nexport default function LineGraph(props) {\n\n  const { data, dataKey } = props;\n\n  const classes = useStyles();\n\n\n  return (\n    <React.Fragment>\n      <div className={classes.tableContainer}>\n        {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n        <LineChart width={600} height={300} data={data}>\n          <Line type=\"monotone\" dataKey={dataKey} stroke=\"#8884d8\" />\n          <CartesianGrid stroke=\"#ccc\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n        </LineChart>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Container,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n } from '@material-ui/core';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    maxHeight: 450,\n    overflowY: 'auto'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n\n}));\n\nexport default function Temperature(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Temperature Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <div className={classes.graphContainer}>\n              {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n              <LineChart width={600} height={300} data={data}>\n                <Line dot={false} type=\"monotone\" dataKey=\"Temperature\" stroke=\"#8884d8\" />\n                <Line dot={false} type=\"monotone\" dataKey=\"Temperature Prediction\" stroke=\"#14e05f\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n              </LineChart>\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <TableContainer className={classes.tableContainer}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Time\n                    </TableCell>\n                    <TableCell>\n                      Temperature (celcius)\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map(data => (\n                    <TableRow>\n                      <TableCell>\n                        {data.time}\n                      </TableCell>\n                      <TableCell>\n                        {data.Temperature}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Container,\n  Grid, \n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n } from '@material-ui/core';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    maxHeight: 450,\n    overflowY: 'auto'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n\n}));\n\nexport default function Altitude(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Altitude Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <div className={classes.graphContainer}>\n              {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n              <LineChart width={600} height={300} data={data}>\n                <Line dot={false} type=\"monotone\" dataKey=\"Altitude\" stroke=\"#8884d8\" />\n                <Line dot={false} type=\"monotone\" dataKey=\"Altitude Prediction\" stroke=\"#14e05f\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n              </LineChart>\n            </div>\n          </Grid>\n          <Grid item md={5}>\n          <TableContainer className={classes.tableContainer}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Time\n                    </TableCell>\n                    <TableCell>\n                      Altitude (m)\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map(data => (\n                    <TableRow>\n                      <TableCell>\n                        {data.time}\n                      </TableCell>\n                      <TableCell>\n                        {data.Altitude}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Container,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n } from '@material-ui/core';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    maxHeight: 450,\n    overflowY: 'auto'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n\n}));\n\nexport default function CO2(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>CO2 Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <div className={classes.graphContainer}>\n              {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n              <LineChart width={600} height={300} data={data}>\n                <Line dot={false} type=\"monotone\" dataKey=\"CO2\" stroke=\"#8884d8\" />\n                {/* <Line dot={false} type=\"monotone\" dataKey=\"CO2 Prediction\" stroke=\"#14e05f\" /> */}\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n              </LineChart>\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <TableContainer className={classes.tableContainer}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Time\n                    </TableCell>\n                    <TableCell>\n                      CO2 (parts per million)\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map(data => (\n                    <TableRow>\n                      <TableCell>\n                        {data.time}\n                      </TableCell>\n                      <TableCell>\n                        {data.CO2}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Container,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n } from '@material-ui/core';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    maxHeight: 450,\n    overflowY: 'auto'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n\n}));\n\nexport default function Humidity(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Humidity Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <div className={classes.graphContainer}>\n              {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n              <LineChart width={600} height={300} data={data}>\n                <Line dot={false} type=\"monotone\" dataKey=\"Humidity\" stroke=\"#8884d8\" />\n                <Line dot={false} type=\"monotone\" dataKey=\"Humidity Prediction\" stroke=\"#14e05f\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n              </LineChart>\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <TableContainer className={classes.tableContainer}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Time\n                    </TableCell>\n                    <TableCell>\n                      Humidity (g/m<sup>3</sup>)\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map(data => (\n                    <TableRow>\n                      <TableCell>\n                        {data.time}\n                      </TableCell>\n                      <TableCell>\n                        {data.Humidity}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Container,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n } from '@material-ui/core';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    maxHeight: 450,\n    overflowY: 'auto'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n\n}));\n\nexport default function Pressure(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Pressure Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <div className={classes.graphContainer}>\n              {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n              <LineChart width={600} height={300} data={data}>\n                <Line dot={false} type=\"monotone\" dataKey=\"Pressure\" stroke=\"#8884d8\" />\n                <Line dot={false} type=\"monotone\" dataKey=\"Pressure Prediction\" stroke=\"#14e05f\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n              </LineChart>\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <TableContainer className={classes.tableContainer}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Time\n                    </TableCell>\n                    <TableCell>\n                      Pressure (mmHg)\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map(data => (\n                    <TableRow>\n                      <TableCell>\n                        {data.time}\n                      </TableCell>\n                      <TableCell>\n                        {data.Pressure}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState } from 'react';\nimport LineGraph from './LineGraph';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n  Container,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n } from '@material-ui/core';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Label, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nconst useStyles = makeStyles(theme => ({\n  tableContainer: {\n    maxHeight: 450,\n    overflowY: 'auto'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  graphContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 20\n  },\n  graphTitle: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  }\n\n\n}));\n\nexport default function TVOC(props) {\n\n  const { data } = props;\n\n  const classes = useStyles();\n\n  return(\n    <React.Fragment>\n      <h3>Total Volatile Organic Compounds Graph</h3>\n      <Container>\n        <Grid container spacing={1}>\n          <Grid item md={7}>\n            <div className={classes.graphContainer}>\n              {/* <h3 className={classes.tableTitle}>Chart Title</h3> */}\n              <LineChart width={600} height={300} data={data}>\n                <Line dot={false} type=\"monotone\" dataKey=\"TVOC\" stroke=\"#8884d8\" />\n                {/* <Line dot={false} type=\"monotone\" dataKey=\"TVOC Prediction\" stroke=\"#14e05f\" /> */}\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"time\" />\n                <YAxis/>\n                <Tooltip />\n                <Legend />\n              </LineChart>\n            </div>\n          </Grid>\n          <Grid item md={5}>\n            <TableContainer className={classes.tableContainer}>\n              <Table stickyHeader>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      Time\n                    </TableCell>\n                    <TableCell>\n                      TVOC (parts per million)\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {data.map(data => (\n                    <TableRow>\n                      <TableCell>\n                        {data.time}\n                      </TableCell>\n                      <TableCell>\n                        {data.TVOC}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n    \n  )\n}","import React, { useState, useEffect } from 'react';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { \n  Modal,\n  AppBar,\n  Tabs,\n  Tab,\n  Typography,\n  Box, \n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LineGraph from './LineGraph';\nimport Temperature from './Temperature';\nimport Altitude from './Altitude';\nimport CO2 from './CO2';\nimport Humidity from './Humidity';\nimport Pressure from './Pressure';\nimport TVOC from './TVOC';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: '85%',\n    height: '85%',\n    top: '5%',\n    left: '5%',\n    overflowY: 'auto',\n  },\n  tableContainer: {\n    display: 'flex'\n  },\n  tableStyle: {\n    flex: 2,\n  },\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\n\nexport default function Beacon(props) {\n  const { data, prediction } = props;\n\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(0);\n \n  const [altData, setAltData] = useState([]);\n\n  const [CO2Data, setCO2Data] = useState([]);\n\n  const [humData, setHumData] = useState([]);\n  const [humPred, setHumPred] = useState([]);\n\n  const [presData, setPresData] = useState([]);\n  const [presPred, setPresPred] = useState([]);\n\n  const [TVOCData, setTVOCData] = useState([]);\n\n  const [tempData, setTempData] = useState([]);\n  const [tempPred, setTempPred] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  }\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  useEffect(() => {\n    if (data && prediction && data[0] && prediction[0]) {\n      const timeOffset = data[0].Time;\n       // setting new altitude data\n      const newAltData = data.map(e => {\n        return {Altitude: e.Altitude, time: e.Time - timeOffset}\n      });\n      const newAltPred = prediction.map(e => {\n        return {'Altitude Prediction': e.Altitude, time: e.Time - timeOffset}\n      });\n      setAltData([...newAltData, ...newAltPred]);\n      // setting new CO2 data\n      const newCO2Data = data.map(e => {\n        return {CO2: e.CO2, time: e.Time - timeOffset}\n      })\n      setCO2Data(newCO2Data);\n      // setting new humidity data\n      const newHumData = data.map(e => {\n        return {Humidity: e.Humidity, time: e.Time - timeOffset}\n      })\n      const newHumPred = prediction.map(e => {\n        return {'Humidity Prediction': e.Humidity, time: e.Time - timeOffset}\n      })\n      setHumData([...newHumData, ...newHumPred]);\n      // setting new pressure data\n      const newPresData = data.map(e => {\n        return {Pressure: e.Pressure, time: e.Time - timeOffset}\n      })\n      const newPresPred = prediction.map(e => {\n        return {'Pressure Prediction': e.Pressure, time: e.Time - timeOffset}\n      })\n      setPresData([...newPresData, ...newPresPred]);\n      // setting new TVOC data\n      const newTVOCData = data.map(e => {\n        return {TVOC: e.TVOC, time: e.Time - timeOffset}\n      })\n      setTVOCData(newTVOCData);\n      // setting new temperature data\n      const newTempData = data.map(e => {\n        return {Temperature: e.Temperature, time: e.Time - timeOffset}\n      })\n      const newTempPred = prediction.map(e => {\n        return {'Temperature Prediction': e.Temperature, time: e.Time - timeOffset}\n      })\n      setTempData([...newTempData, ...newTempPred]);\n    } else if (data && data[0]) {\n      const timeOffset = data[0].Time;\n       // setting new altitude data\n      const newAltData = data.map(e => {\n        return {Altitude: e.Altitude, time: e.Time - timeOffset}\n      });\n      setAltData(newAltData);\n      // setting new CO2 data\n      const newCO2Data = data.map(e => {\n        return {CO2: e.CO2, time: e.Time - timeOffset}\n      })\n      setCO2Data(newCO2Data);\n      // setting new humidity data\n      const newHumData = data.map(e => {\n        return {Humidity: e.Humidity, time: e.Time - timeOffset}\n      })\n      setHumData(newHumData);\n      // setting new pressure data\n      const newPresData = data.map(e => {\n        return {Pressure: e.Pressure, time: e.Time - timeOffset}\n      })\n      setPresData(newPresData);\n      // setting new TVOC data\n      const newTVOCData = data.map(e => {\n        return {TVOC: e.TVOC, time: e.Time - timeOffset}\n      })\n      setTVOCData(newTVOCData);\n      // setting new temperature data\n      const newTempData = data.map(e => {\n        return {Temperature: e.Temperature, time: e.Time - timeOffset}\n      })\n      setTempData(newTempData);\n    }\n   \n  }, [data, prediction])\n\n\n  return(\n    <div>\n      {/* <ArrowUpwardIcon \n        style={{transform: `rotate(${rot}deg)`}}\n      /> */}\n      <PlaceIcon \n        style={{fontSize: 50}} \n        color=\"secondary\"\n        onClick={handleOpen}\n      />\n     <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div className={classes.paper}>\n          <h2>Beacon Data</h2>\n          <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n                <Tab label=\"Altitude\" {...a11yProps(0)} />\n                <Tab label=\"CO2\" {...a11yProps(1)} />\n                <Tab label=\"Humidity\" {...a11yProps(2)} />\n                <Tab label=\"Pressure\" {...a11yProps(3)} />\n                <Tab label=\"TVOC\" {...a11yProps(4)} />\n                <Tab label=\"Temperature\" {...a11yProps(5)} />\n              </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n              <Altitude data={altData} />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              <CO2 data={CO2Data} />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              <Humidity data={humData} />\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n              <Pressure data={presData} />\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n              <TVOC data={TVOCData} />\n            </TabPanel>\n            <TabPanel value={value} index={5}>\n              <Temperature data={tempData}/>\n            </TabPanel>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Beacon from './components/Beacon';\nimport firebase from 'firebase';\nimport { \n  Modal,\n  AppBar,\n  Tabs,\n  Tab,\n  Typography,\n  Box, \n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCxkOPS5DqnXak4ecDbuPrNKJ-fK4Xc868\",\n  authDomain: \"hacktech2020-88888.firebaseapp.com\",\n  databaseURL: \"https://hacktech2020-88888.firebaseio.com\",\n  projectId: \"hacktech2020-88888\",\n  storageBucket: \"hacktech2020-88888.appspot.com\",\n  messagingSenderId: \"562008011322\",\n  appId: \"1:562008011322:web:ff933e53757c12fd84fb03\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport var database = firebase.database();\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst heatMapData0 = {    \n  positions: [\n    {lat: 60.05, lng: 30.45, weight: 2},\n    {lat: 60, lng: 30.5, weight: 1},\n    {lat: 60.078, lng: 30.32, weight: 0.7},\n    {lat: 59.94, lng: 30.45, weight: 0.2},\n    {lat: 59.94, lng: 30.59, weight: 2},\n    {lat: 60.1, lng: 30.70, weight: 2.3},\n  ],\n  options: {   \n    radius: 300,   \n    opacity: 0.6,\n  }\n}\n\nconst heatMapData1 = {    \n  positions: [\n    {lat: 60.05, lng: 30.45, weight: 2},\n    {lat: 60, lng: 30.5, weight: 2},\n    {lat: 60.078, lng: 30.32, weight: 0.7},\n    {lat: 59.94, lng: 30.45, weight: 0.8},\n    {lat: 59.94, lng: 30.59, weight: 2},\n    {lat: 60.1, lng: 30.70, weight: 1.4},\n  ],\n  options: {   \n    radius: 300,   \n    opacity: 0.8,\n  }\n}\n\nconst heatMapData2 = {    \n  positions: [\n    {lat: 60.05, lng: 30.45, weight: 2},\n    {lat: 60, lng: 30.5, weight: 1},\n    {lat: 60.078, lng: 30.32, weight: 0.7},\n    {lat: 59.94, lng: 30.45, weight: 2},\n    {lat: 59.94, lng: 30.59, weight: 1.2},\n    {lat: 60.1, lng: 30.70, weight: 1.2},\n  ],\n  options: {   \n    radius: 200,   \n    opacity: 0.4,\n  }\n}\n\nconst heatMapData3 = {    \n  positions: [\n    {lat: 60.05, lng: 30.45, weight: 1},\n    {lat: 60, lng: 30.5, weight: 0.4},\n    {lat: 60.078, lng: 30.32, weight: 1.2},\n    {lat: 59.94, lng: 30.45, weight: 2},\n    {lat: 59.94, lng: 30.59, weight: 0.5},\n    {lat: 60.1, lng: 30.70, weight: 1.4},\n  ],\n  options: {   \n    radius: 300,   \n    opacity: 0.6,\n  }\n}\n\nconst heatMapData4 = {    \n  positions: [\n    {lat: 60.05, lng: 30.45, weight: 1.5},\n    {lat: 60, lng: 30.5, weight: 2},\n    {lat: 60.078, lng: 30.32, weight: 0.3},\n    {lat: 59.94, lng: 30.45, weight: 1.2},\n    {lat: 59.94, lng: 30.59, weight: 2},\n    {lat: 60.1, lng: 30.70, weight: 2.3},\n  ],\n  options: {   \n    radius: 300,   \n    opacity: 0.6,\n  }\n}\n\nconst heatMapData5 = {    \n  positions: [\n    {lat: 60.05, lng: 30.45, weight: 2},\n    {lat: 60, lng: 30.5, weight: 1},\n    {lat: 60.078, lng: 30.32, weight: 1.7},\n    {lat: 59.94, lng: 30.45, weight: 2.2},\n    {lat: 59.94, lng: 30.59, weight: 2},\n    {lat: 60.1, lng: 30.70, weight: 1.2},\n  ],\n  options: {   \n    radius: 300,   \n    opacity: 0.6,\n  }\n}\n\nexport default function App() {\n  const [prediction, setPrediction] = useState(0);\n  const [data, setData] = useState(0);\n  const [fakeData, setFakeData] = useState(0);\n  const [value, setValue] = useState(0);\n  const [heatMapData, setHeatMapData] = useState(heatMapData0);\n\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    switch(newValue){\n      case 0:\n        setHeatMapData(heatMapData0);\n        break;\n      case 1:\n        setHeatMapData(heatMapData1);\n        break;\n      case 2:\n        setHeatMapData(heatMapData2);\n        break; \n      case 3:\n        setHeatMapData(heatMapData3);\n        break;\n      case 4:\n        setHeatMapData(heatMapData4);\n        break;\n      case 5:\n        setHeatMapData(heatMapData5);\n        break;\n      default:\n    }\n\n  };\n\n  useEffect(() => {\n    const dataRef = database.ref('Data');\n    dataRef.on('value', (snapshot) => {\n      let value = snapshot.val();\n      setData(value);\n      \n    });\n    const predictionRef = database.ref('Prediction');\n    predictionRef.on('value', (snapshot) => {\n      let value = snapshot.val();\n      setPrediction(value);\n    })\n    const fakeDataRef = database.ref('Data2');\n    fakeDataRef.on('value', (snapshot) => {\n      let value = snapshot.val();\n      setFakeData(value);\n    })\n  }, [heatMapData]);\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab label=\"Altitude\" {...a11yProps(0)} />\n            <Tab label=\"CO2\" {...a11yProps(1)} />\n            <Tab label=\"Humidity\" {...a11yProps(2)} />\n            <Tab label=\"Pressure\" {...a11yProps(3)} />\n            <Tab label=\"TVOC\" {...a11yProps(4)} />\n            <Tab label=\"Temperature\" {...a11yProps(5)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n        </TabPanel>\n        <TabPanel value={value} index={5}>\n        </TabPanel>\n      </div>\n      <div style={{ position: 'absolute', top: '10%', left: '5%', height: '80%', width: '90%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyBWSzeSPr_5zD53xEs0CU0UTOVYsOb6FvA'}}\n          defaultCenter={{\n            lat: 60,\n            lng: 30.5,\n          }}\n          options={{ scrollwheel: false }}\n          heatmapLibrary={true}          \n          heatmap={heatMapData}   \n          zoom={11}\n        >\n          {/* {lat: 60.05, lng: 30.45, weight: 2},\n    {lat: 60, lng: 30.5, weight: 1},\n    {lat: 60.078, lng: 30.32, weight: 1.7},\n    {lat: 59.94, lng: 30.45, weight: 2.2},\n    {lat: 59.94, lng: 30.59, weight: 2},\n    {lat: 60.1, lng: 30.70, weight: 1.2}, */}\n          <Beacon \n            lat={60}\n            lng={30.5}\n            data={Object.values(data)}\n            prediction={Object.values(prediction)}\n          />\n          <Beacon\n            lat={60.05}\n            lng={30.45}\n            data={Object.values(fakeData)}\n          />\n          <Beacon\n            lat={60.078}\n            lng={30.32}\n            data={Object.values(fakeData)}\n          />\n          <Beacon\n            lat={59.94}\n            lng={30.45}\n            data={Object.values(fakeData)}\n          />\n          <Beacon\n            lat={59.94}\n            lng={30.59}\n            data={Object.values(fakeData)}\n          />\n          <Beacon\n            lat={60.01}\n            lng={30.70}\n            data={Object.values(fakeData)}\n          />\n\n        </GoogleMapReact>\n      </div>\n    </div>\n    \n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}